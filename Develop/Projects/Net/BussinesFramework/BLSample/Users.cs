

/******************************************
 * Auto-generated by CodeRocket
 * 03.04.2008 21:55:00
 ******************************************/
using System;
using System.Data;
using System.Xml.Serialization;
using WAM.BusinessLogic;

namespace WAM.Dao 
{    
    
	/// <summary>
	/// Base Users
	/// </summary>
	[Serializable]
	public class Users
{


        	
	
	 #region Properties
	 private Users objectValue;
	 

              /// <summary>
        /// Gets or sets the Email.
        /// </summary>
        /// <value>The Email.</value>   
		[XmlElement(ElementName = "Email")]
		public System.String Email 
		{
			get{return objectValue.Email;}
			set{objectValue.Email = value;}
		}			

              /// <summary>
        /// Gets or sets the FirstName.
        /// </summary>
        /// <value>The FirstName.</value>   
		[XmlElement(ElementName = "FirstName")]
		public System.String FirstName 
		{
			get{return objectValue.FirstName;}
			set{objectValue.FirstName = value;}
		}			

              /// <summary>
        /// Gets or sets the LastName.
        /// </summary>
        /// <value>The LastName.</value>   
		[XmlElement(ElementName = "LastName")]
		public System.String LastName 
		{
			get{return objectValue.LastName;}
			set{objectValue.LastName = value;}
		}			

              /// <summary>
        /// Gets or sets the Login.
        /// </summary>
        /// <value>The Login.</value>   
		[XmlElement(ElementName = "Login")]
		public System.String Login 
		{
			get{return objectValue.Login;}
			set{objectValue.Login = value;}
		}			

              /// <summary>
        /// Gets or sets the Password.
        /// </summary>
        /// <value>The Password.</value>   
		[XmlElement(ElementName = "Password")]
		public System.String Password 
		{
			get{return objectValue.Password;}
			set{objectValue.Password = value;}
		}			

              /// <summary>
        /// Gets or sets the UserID.
        /// </summary>
        /// <value>The UserID.</value>   
		[XmlElement(ElementName = "UserID")]
		public System.Int32 UserID 
		{
			get{return objectValue.UserID;}
			set{objectValue.UserID = value;}
		}			

        
        #endregion
        
          
        
        /// <summary>
        /// Copies the specified destination.
        /// </summary>
        /// <param name="destination">The destination.</param>
        protected override void Copy(object destination)
        {
            UsersBase<TPool> dest = destination as UsersBase<TPool>;
            
            dest._Email = _Email;
            dest._FirstName = _FirstName;
            dest._LastName = _LastName;
            dest._Login = _Login;
            dest._Password = _Password;
            dest._UserID = _UserID;
            
             base.Copy(destination);
        }	
        
        
        /// <summary>
        /// Validates this instance.
        /// </summary>
        public override void Validate()
        {
            if ( Email.Length >150|| FirstName.Length >50|| LastName.Length >50|| Login.Length >50|| Password.Length >50)
                throw new ValidateException(ApplicationCore.SR.Errors.
Properties for: TableSchema
	Name(System.String): Users
	Alias(System.String): Users
	ProperName(System.String): Users
	IsActive(System.Boolean): True
	TableType(DataSchema.TableType): TABLE
	Columns(DataSchema.Collections.ColumnSchemaDictionary): DataSchema.Collections.ColumnSchemaDictionary
	Item(DataSchema.ColumnSchema): 
	ActiveColumns(System.Collections.Generic.List`1[DataSchema.ColumnSchema]): System.Collections.Generic.List`1[DataSchema.ColumnSchema]
	OrdinalColumns(System.Collections.Generic.List`1[DataSchema.ColumnSchema]): System.Collections.Generic.List`1[DataSchema.ColumnSchema]
	SortedColumns(System.Collections.Generic.SortedDictionary`2[System.String,DataSchema.ColumnSchema]): System.Collections.Generic.SortedDictionary`2[System.String,DataSchema.ColumnSchema]
	Procedures(DataSchema.Collections.ProcedureSchemaDictionary): 
	ProcedureCount(System.Int32): 0
	PrimaryKeys(DataSchema.Collections.PrimaryKeyColumnDictionary): 
	ForeignKeys(DataSchema.Collections.ForeignKeyDictionary): DataSchema.Collections.ForeignKeyDictionary
	PrimaryKeyCount(System.Int32): 1
	ForeignKeyCount(System.Int32): 0
	PrimaryKeyColumns(System.Collections.Generic.ICollection`1[DataSchema.ColumnSchema]): System.Collections.Generic.Dictionary`2+ValueCollection[System.String,DataSchema.ColumnSchema]
	HasForeignKeys(System.Boolean): False
	HasPrimaryKeys(System.Boolean): True

DataSchema.Collections.ColumnSchemaDictionary.CommonValidationError);
        }	
        
        
 
 
	}
}
