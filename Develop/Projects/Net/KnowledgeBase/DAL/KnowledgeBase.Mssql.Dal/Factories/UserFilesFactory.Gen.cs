

/******************************************
* Auto-generated by CodeRocket
* 24.11.2008 16:17:00
******************************************/

using System.Collections.Generic;
using System.Data;
using KnowledgeBase.Dal;
using KnowledgeBase.DAL;
using Savchin.Data.Common;

namespace KnowledgeBase.Mssql.Dal
{
    /// <summary>
    /// UserFile Factory class
    ///
    //</summary>
    public partial class UserFileFactory : DbFactoryBase<UserFileValue>, IUserFileFactory
    {

        int ordinalFileName;
        int ordinalSize;
        int ordinalUserFileID;
        int ordinalUserID;


        protected override void InitOrdinals(IDataReader reader)
        {
            ordinalFileName = reader.GetOrdinal("FileName");
            ordinalSize = reader.GetOrdinal("Size");
            ordinalUserFileID = reader.GetOrdinal("UserFileID");
            ordinalUserID = reader.GetOrdinal("UserID");
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="UserFileFactory"/> class.
        /// </summary>
        /// <param name="context">The context.</param>
        public UserFileFactory(DalContext context)
            : base(context)
        {

        }
        /// <summary>
        /// Maps the IDataReader values to a UserFile object
        //</summary>
        /// <param name="reader">The IDataReader to map</param>
        protected override UserFileValue MapObject(IDataReader reader)
        {
            UserFileValue result = new UserFileValue();
            result.FileName = reader.GetString(ordinalFileName);
            result.Size = reader.GetInt32(ordinalSize);
            result.UserFileID = reader.GetInt32(ordinalUserFileID);
            result.UserID = reader.GetInt32(ordinalUserID);
            return result;
        }

        /// <summary>
        /// Creates the insert command.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns></returns>
        public void Insert(UserFileValue value)
        {
            IDbCommand command = Database.CreateSPCommand("UserFile_Insert");
            command.AddInputParameter( "@FileName", DbType.String, value.FileName);
            command.AddInputParameter( "@Size", DbType.Int32, value.Size);
            IDbDataParameter UserFileIDParameter = command.AddParameter( "@UserFileID", DbType.Int32, null, ParameterDirection.Output);
            command.AddInputParameter( "@UserID", DbType.Int32, value.UserID);
            Database.ExecuteNonQuery(command);

            value.UserFileID = (System.Int32)UserFileIDParameter.Value;
        }

        /// <summary>
        /// Updates the specified UserFile.
        /// </summary>
        /// <param name="value">The UserFile value.</param>
        public void Update(UserFileValue value)
        {
            IDbCommand command = Database.CreateSPCommand("UserFile_Update");
            command.AddInputParameter( "@FileName", DbType.String, value.FileName);
            command.AddInputParameter( "@Size", DbType.Int32, value.Size);
            command.AddInputParameter( "@UserFileID", DbType.Int32, value.UserFileID);
            command.AddInputParameter( "@UserID", DbType.Int32, value.UserID);
            Database.ExecuteNonQuery(command);

        }
        /// <summary>
        /// Gets UserFile by ID.
        /// </summary>
        /// <param name="UserFileID">The UserFileID.</param>
        /// <returns></returns>
        public UserFileValue SelectByID(System.Int32 UserFileID)
        {
            IDbCommand command = Database.CreateSPCommand("UserFile_GetByID");
            command.AddInputParameter( "@UserFileID", DbType.Int32, UserFileID);
            return SelectSingle(command);
        }

        /// <summary>
        /// Deletes the specified UserFile.
        /// </summary>
        /// <param name="UserFileID">The UserFileID.</param>
        public void Delete(System.Int32 UserFileID)
        {
            IDbCommand command = Database.CreateSPCommand("UserFile_Delete");
            command.AddInputParameter( "@UserFileID", DbType.Int32, UserFileID);
            Database.ExecuteNonQuery(command);

        }

        /// <summary>
        /// Deletes the specified UserFile.
        /// </summary>
        /// <param name="value">The value.</param>
        public void Delete(UserFileValue value)
        {
            IDbCommand command = Database.CreateSPCommand("UserFile_Delete");
            command.AddInputParameter( "@UserFileID", DbType.Int32, value.UserFileID);
            Database.ExecuteNonQuery(command);

        }
        /// <summary>
        /// Selects all UserFile values.
        /// </summary>
        /// <returns>List of all UserFile</returns>
        public IList<UserFileValue> SelectAll()
        {
            return Select(Database.CreateSPCommand("UserFile_GetAll"));
        }


        /// <summary>
        /// Selects UserFile values UserID .
        /// ForeignKey: FK_UserFiles_Users
        /// </summary>
        /// <param name="UserID">The UserID.</param>
        /// <returns>List of UserFile</returns>   
        public IList<UserFileValue> SelectByUserID(System.Int32 UserID)
        {
            IDbCommand command = Database.CreateSPCommand("UserFile_GetByUserID");
            command.AddInputParameter( "@UserID", DbType.Int32, UserID);
            return Select(command);
        }
    }
}