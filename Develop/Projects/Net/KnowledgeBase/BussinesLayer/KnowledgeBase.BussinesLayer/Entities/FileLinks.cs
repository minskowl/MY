

/******************************************
 * Auto-generated by CodeRocket
 * 11.11.2008 17:08:39
 ******************************************/
using System;
using System.Data;
using System.Web;
using System.Xml.Serialization;
using KnowledgeBase.BussinesLayer.Core;
using KnowledgeBase.Core;
using KnowledgeBase.DAL;
using Savchin.Validation;


namespace KnowledgeBase.BussinesLayer
{

    /// <summary>
    /// Base FileLink
    /// </summary>
    [Serializable]
    public class FileLink : EntityBase<FileLinkValue>
    {



        #region Properties

        private FileStorage storage;

        /// <summary>
        /// Gets the storage.
        /// </summary>
        /// <value>The storage.</value>
        public FileStorage Storage
        {
            get
            {
                if(storage==null && Identifier.IsValid( FileStorageID))
                {
                    storage = Context.ManagerFileStorage.GetByID(FileStorageID);
                }
                return storage;
            }
        }


        /// <summary>
        /// Gets or sets the FileLinkID.
        /// </summary>
        /// <value>The FileLinkID.</value>   
        [XmlAttribute]
        public System.Int32 FileLinkID
        {
            get { return ObjectValue.FileLinkID; }
            set { ObjectValue.FileLinkID = value; }
        }

        /// <summary>
        /// Gets or sets the FileStorageID.
        /// </summary>
        /// <value>The FileStorageID.</value>   
        [XmlAttribute]
        public System.Int16 FileStorageID
        {
            get { return ObjectValue.FileStorageID; }
            set { ObjectValue.FileStorageID = value; }
        }

        /// <summary>
        /// Gets or sets the Path.
        /// </summary>
        /// <value>The Path.</value>   
        [XmlAttribute]
        [RequiredFieldValidation()]
        public System.String Path
        {
            get { return ObjectValue.Path; }
            set { ObjectValue.Path = value; }
        }

        /// <summary>
        /// Gets or sets the PublicID.
        /// </summary>
        /// <value>The PublicID.</value>   
        [XmlAttribute]
        public System.Guid PublicID
        {
            get { return ObjectValue.PublicID; }
        
        }



        /// <summary>
        /// Gets the full path.
        /// </summary>
        /// <value>The full path.</value>
        public string FullPath
        {
            get
            {
                return (Storage == null) ? Path : Storage.Path + Path;
            }
        }

        #endregion

        /// <summary>
        /// Initializes a new instance of the <see cref="FileLink"/> class.
        /// </summary>
        public FileLink()
            : base()
        {
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="FileLink"/> class.
        /// </summary>
        /// <param name="value">The value.</param>
        internal FileLink(FileLinkValue value)
            : base(value)
        {
        }


        /// <summary>
        /// Copies the specified destination.
        /// </summary>
        /// <param name="destination">The destination.</param>
        //        protected override void Copy(object destination)
        //        {
        //            FileLinkBase<TPool> dest = destination as FileLinkBase<TPool>;

        //           dest._FileLinkID = _FileLinkID;
        //           dest._FileStorageID = _FileStorageID;
        //           dest._Path = _Path;
        //           dest._PublicID = _PublicID;

        //            base.Copy(destination);
        //       }	







    }
}
