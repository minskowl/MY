/******************************************
 * Auto-generated by CodeRocket
 * 29.10.2008 21:54:39
 ******************************************/
using System;
using System.ComponentModel;
using System.Xml.Serialization;
using KnowledgeBase.BussinesLayer.Core;
using KnowledgeBase.DAL;
using Savchin.Validation;

namespace KnowledgeBase.BussinesLayer
{
    /// <summary>
    /// KeywÂordStatus
    /// </summary>
    public enum KeywordStatus : byte
    {
        /// <summary>
        /// New
        /// </summary>
        New = 0,
        /// <summary>
        /// Approved
        /// </summary>
        Approved = 5
    }
    /// <summary>
    /// KeywordType
    /// </summary>
    public enum KeywordType : short
    {
        /// <summary>
        /// Other
        /// </summary>
        Other = 1,
        /// <summary>
        /// ProgrammingLanguages
        /// </summary>
        [Description("Programming Languages")]
        ProgrammingLanguages = 2,
        /// <summary>
        /// Databases
        /// </summary>
        Databases = 3,
        /// <summary>
        ///Technologies 
        /// </summary>
        Technologies = 4,
        /// <summary>
        /// Browsers
        /// </summary>
        Browsers = 5,
        /// <summary>
        /// OS
        /// </summary>
        OS = 6,
        /// <summary>
        /// Classes
        /// </summary>
        Classes = 7
    }
    /// <summary>
    /// Base Keyword
    /// </summary>
    [Serializable]
    public class Keyword : EntityBase<KeywordValue>
    {
        #region Properties

        /// <summary>
        /// Gets or sets the KeywordID.
        /// </summary>
        /// <value>The KeywordID.</value>   
        [XmlElement(ElementName = "KeywordID")]
        public Int32 KeywordID
        {
            get { return ObjectValue.KeywordID; }
            set
            {
                if (ObjectValue.KeywordID != value)
                {
                    ObjectValue.KeywordID = value;
                    NotifyPropertyChanged("KeywordID");
                }

            }
        }

        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        /// <value>The Name.</value>   
        [XmlElement(ElementName = "Name")]
        [RequiredFieldValidation]
        [RangeValidation((int)50)]
        public String Name
        {
            get { return ObjectValue.Name; }
            set
            {
                if (ObjectValue.Name != value)
                {
                    ObjectValue.Name = value;
                    NotifyPropertyChanged("Name");
                }
            }
        }

        /// <summary>
        /// Gets the creation date.
        /// </summary>
        /// <value>The creation date.</value>
        [XmlAttribute]
        public DateTime CreationDate
        {
            get { return ObjectValue.CreationDate; }
        }

        /// <summary>
        /// Gets the keyword status.
        /// </summary>
        /// <value>The keyword status.</value>
        [XmlAttribute]
        public KeywordStatus KeywordStatus
        {
            get { return (KeywordStatus)ObjectValue.KeywordStatusID; }
            set
            {
                var v = (byte) value;
                if (ObjectValue.KeywordStatusID != v)
                {
                    ObjectValue.KeywordStatusID = v;
                    NotifyPropertyChanged("KeywordStatus");
                }
            }
        }

        /// <summary>
        /// Gets or sets the type of the keyword.
        /// </summary>
        /// <value>The type of the keyword.</value>
        public KeywordType KeywordType
        {
            get { return (KeywordType)ObjectValue.KeywordTypeID; }
            set
            {
                var v = (short)value;
                if (ObjectValue.KeywordTypeID != v)
                {
                    ObjectValue.KeywordTypeID = v;
                    NotifyPropertyChanged("KeywordType");
                }
            }
        }
        #endregion

        /// <summary>
        /// Initializes a new instance of the <see cref="Keyword"/> class.
        /// </summary>
        public Keyword()
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Keyword"/> class.
        /// </summary>
        /// <param name="value">The value.</param>
        internal Keyword(KeywordValue value)
            : base(value)
        {
        }

        /// <summary>
        /// Returns a <see cref="System.String"/> that represents this instance.
        /// </summary>
        /// <returns>
        /// A <see cref="System.String"/> that represents this instance.
        /// </returns>
        public override string ToString()
        {
            return Name;
        }

        /// <summary>
        /// Called when [end edit].
        /// </summary>
        protected override void OnEndEdit()
        {
            base.OnEndEdit();

            Context.ManagerKeyword.Save(this);
        }
    }
}