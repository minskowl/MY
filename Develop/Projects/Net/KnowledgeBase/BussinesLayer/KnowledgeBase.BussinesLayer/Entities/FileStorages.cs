/******************************************
 * Auto-generated by CodeRocket
 * 11.11.2008 17:08:40
 ******************************************/
using System;
using System.Xml.Serialization;
using KnowledgeBase.BussinesLayer.Core;
using KnowledgeBase.DAL;
using Savchin.Validation;

namespace KnowledgeBase.BussinesLayer
{
    /// <summary>
    /// Base FileStorage
    /// </summary>
    [Serializable]
    public class FileStorage : EntityBase<FileStorageValue>
    {
        #region Properties

        /// <summary>
        /// Gets or sets the FileStorageID.
        /// </summary>
        /// <value>The FileStorageID.</value>   
        [XmlAttribute]
        public Int16 FileStorageID
        {
            get { return ObjectValue.FileStorageID; }
            set { ObjectValue.FileStorageID = value; }
        }

        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        /// <value>The Name.</value>   
        [XmlAttribute]
        [RequiredFieldValidation]
        public String Name
        {
            get { return ObjectValue.Name; }
            set { ObjectValue.Name = value; }
        }

        /// <summary>
        /// Gets or sets the Path.
        /// </summary>
        /// <value>The Path.</value>   
        [XmlAttribute]
        [RequiredFieldValidation]
        public String Path
        {
            get { return ObjectValue.Path; }
            set { ObjectValue.Path = value; }
        }

        #endregion

        /// <summary>
        /// Initializes a new instance of the <see cref="FileStorage"/> class.
        /// </summary>
        public FileStorage()
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="FileStorage"/> class.
        /// </summary>
        /// <param name="value">The value.</param>
        internal FileStorage(FileStorageValue value)
            : base(value)
        {
        }


        /// <summary>
        /// Copies the specified destination.
        /// </summary>
        /// <param name="destination">The destination.</param>
        //        protected override void Copy(object destination)
        //        {
        //            FileStorageBase<TPool> dest = destination as FileStorageBase<TPool>;

        //           dest._FileStorageID = _FileStorageID;
        //           dest._Name = _Name;
        //           dest._Pah = _Pah;

        //            base.Copy(destination);
        //       }	
    }
}