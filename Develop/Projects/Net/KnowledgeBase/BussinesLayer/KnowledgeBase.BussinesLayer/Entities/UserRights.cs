

/******************************************
 * Auto-generated by CodeRocket
 * 13.10.2008 21:27:28
 ******************************************/
using System;
using System.Data;
using System.Xml.Serialization;
using KnowledgeBase.BussinesLayer.Core;
using KnowledgeBase.BussinesLayer.Security;
using KnowledgeBase.DAL;

namespace KnowledgeBase.BussinesLayer 
{    
    
	/// <summary>
	/// Base UserRight
	/// </summary>
	[Serializable]
	public class UserRight : EntityBase<UserRightValue>
{

     	
	
	 #region Properties

        
              /// <summary>
        /// Gets or sets the CategoryID.
        /// </summary>
        /// <value>The CategoryID.</value>   
		[XmlElement(ElementName = "CategoryID")]
  		public System.Int32 CategoryID 
		{
			get{return ObjectValue.CategoryID;}
			set{ObjectValue.CategoryID = value;}
		}			

              /// <summary>
        /// Gets or sets the Permission.
        /// </summary>
        /// <value>The PermissionID.</value>   
        [XmlElement(ElementName = "Permission")]
        public Permission Permission
		{
            get { return (Permission)ObjectValue.PermissionID; }
			set{ObjectValue.PermissionID = (short)value;}
		}			

              /// <summary>
        /// Gets or sets the UserID.
        /// </summary>
        /// <value>The UserID.</value>   
		[XmlElement(ElementName = "UserID")]
  		public System.Int32 UserID 
		{
			get{return ObjectValue.UserID;}
			set{ObjectValue.UserID = value;}
		}			

        
        #endregion
        
        /// <summary>
        /// Initializes a new instance of the <see cref="UserRight"/> class.
        /// </summary>
        public UserRight() : base()
        {
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="UserRight"/> class.
        /// </summary>
        /// <param name="value">The value.</param>
        internal UserRight(UserRightValue value) : base(value)
        {
        }       
          
        
        /// <summary>
        /// Copies the specified destination.
        /// </summary>
        /// <param name="destination">The destination.</param>
//        protected override void Copy(object destination)
//        {
//            UserRightBase<TPool> dest = destination as UserRightBase<TPool>;
            
 //           dest._CategoryID = _CategoryID;
 //           dest._PermissionID = _PermissionID;
 //           dest._UserID = _UserID;
            
 //            base.Copy(destination);
 //       }	
        
        

        
        
 
 
	}
}
