

/******************************************
* Auto-generated by CodeRocket
* 24.11.2008 15:33:12
******************************************/

using System.Collections.Generic;
using KnowledgeBase.BussinesLayer.Core;
using KnowledgeBase.Core;
using KnowledgeBase.DAL;

namespace KnowledgeBase.BussinesLayer.Managers
{

    /// <summary>
    /// UserFile Manager class
    ///</summary>
    public class UserFileManager : ManagerBase< IUserFileFactory, UserFile, UserFileValue>, IUserFileManager
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UserFileManager"/> class.
        /// </summary>
        /// <param name="context">The context.</param>
        /// <param name="provider">The provider.</param>
        public UserFileManager(KbContext context, IFactoryProvider provider)
            : base(context, provider.CreateUserFileFactory())
        {
       
        }

        /// <summary>
        /// Get all.
        /// </summary>
        /// <returns></returns> 
        public IList<UserFile> GetAll()
        {
            return Wrap(Factory.SelectAll());
        }
        /// <summary>
        /// Ges the UserFile by ID.
        /// </summary>
        /// <param name="UserFileID">The UserFileID.</param>
        /// <returns></returns>        
        public UserFile GetByID(System.Int32 UserFileID)
        {
            return Wrap(Factory.SelectByID(UserFileID));
        }



        /// <summary>
        /// Get UserFile values UserID .
        /// </summary>
        /// <param name="UserID">The UserID.</param>
        /// <returns>List of UserFile</returns>   
        public IList<UserFile> GetByUserID(System.Int32 UserID)
        {
            return Wrap(Factory.SelectByUserID(UserID));
        }


        /// <summary>
        /// Saves the specified UserFile.
        /// </summary>
        /// <param name="entity">The entity.</param>
        public void Save(UserFile entity)
        {
            entity.Validate();
            if (Identifier.IsValid(entity.UserFileID))
            {
                Factory.Update(entity.ObjectValue);
            }
            else
            {
                Factory.Insert(entity.ObjectValue);
            }
        }

        /// <summary>
        /// Creates the specified knowledge ID.
        /// </summary>
        /// <param name="fileName">Name of the file.</param>
        /// <param name="content">The content.</param>
        /// <returns></returns>
        public UserFile Create(string fileName, byte[] content)
        {
            UserFile file = new UserFile();
            file.UserID = KbContext.CurrentUserId;
            file.FileName = fileName;
            file.Size = content.Length;
            Save(file);

            SetData(file.UserFileID, content);

            return file;

        }

        /// <summary>
        /// Gets the data.
        /// </summary>
        /// <param name="id">The id.</param>
        /// <returns></returns>
        public byte[] GetData(int id)
        {
            return Factory.GetData(id);
        }
        /// <summary>
        /// Sets the data.
        /// </summary>
        /// <param name="id">The id.</param>
        /// <param name="data">The data.</param>
        public void SetData(int id, byte[] data)
        {
            Factory.SetData(id, data);
        }

        /// <summary>
        /// Deletes the specified UserFile.
        /// </summary>
        /// <param name="entity">The entity.</param>
        public void Delete(UserFile entity)
        {
            Factory.Delete(entity.ObjectValue);
        }

        /// <summary>
        /// Deletes the name of the by user ID by file.
        /// </summary>
        /// <param name="userID">The user ID.</param>
        /// <param name="fileName">Name of the file.</param>
        public void DeleteByUserIDByFileName(System.Int32 userID, string fileName)
        {
            Factory.DeleteByUserIDByFileName(userID, fileName);
        }

       
    }
}