using System.Net.Security;
using System.Security.Cryptography.X509Certificates;

namespace Site.WebMoney
{
    internal static class CertificateValidator
    {
        #region Fields
        private static readonly X509Certificate _rootAuthority1 = new X509Certificate(
      new byte[]
                {
                    0x30, 0x82, 0x04, 0x19, 0x30, 0x82, 0x03, 0x01, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x10, 0x34, 0x75
                    , 0x3a, 0x52, 0xc0, 0x83, 0x70, 0xb2, 0x43, 0xed, 0x0c, 0x3e, 0xd3, 0x2a, 0xb2, 0x46, 0x30, 0x0d,
                    0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x05, 0x05, 0x00, 0x30, 0x6f, 0x31, 0x1a
                    , 0x30, 0x18, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x13, 0x11, 0x57, 0x65, 0x62, 0x4d, 0x6f, 0x6e, 0x65,
                    0x79, 0x20, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x31, 0x26, 0x30, 0x24, 0x06, 0x03, 0x55
                    , 0x04, 0x0b, 0x13, 0x1d, 0x57, 0x65, 0x62, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x20, 0x43, 0x65, 0x72,
                    0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72
                    , 0x31, 0x29, 0x30, 0x27, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x20, 0x57, 0x65, 0x62, 0x4d, 0x6f,
                    0x6e, 0x65, 0x79, 0x20, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x20, 0x52, 0x6f, 0x6f, 0x74
                    , 0x20, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x30, 0x1e, 0x17, 0x0d, 0x30, 0x31,
                    0x30, 0x34, 0x30, 0x34, 0x31, 0x33, 0x34, 0x37, 0x30, 0x39, 0x5a, 0x17, 0x0d, 0x31, 0x30, 0x30, 0x36
                    , 0x30, 0x37, 0x31, 0x39, 0x34, 0x37, 0x31, 0x38, 0x5a, 0x30, 0x6f, 0x31, 0x1a, 0x30, 0x18, 0x06,
                    0x03, 0x55, 0x04, 0x0a, 0x13, 0x11, 0x57, 0x65, 0x62, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x20, 0x54, 0x72
                    , 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x31, 0x26, 0x30, 0x24, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13,
                    0x1d, 0x57, 0x65, 0x62, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x20, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69
                    , 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x31, 0x29, 0x30,
                    0x27, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x20, 0x57, 0x65, 0x62, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x20
                    , 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x20, 0x52, 0x6f, 0x6f, 0x74, 0x20, 0x41, 0x75,
                    0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86
                    , 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00, 0x30, 0x82,
                    0x01, 0x0a, 0x02, 0x82, 0x01, 0x01, 0x00, 0xef, 0x55, 0xd1, 0x16, 0x2b, 0x25, 0x83, 0xc2, 0x39, 0x1e
                    , 0xe8, 0x76, 0x2c, 0x88, 0x09, 0x63, 0x6e, 0xa1, 0x98, 0xf4, 0xb4, 0xdf, 0x59, 0xd6, 0x66, 0x35,
                    0xd2, 0xcf, 0x90, 0x21, 0x81, 0xac, 0x31, 0x90, 0x8d, 0x1b, 0x49, 0x9e, 0x43, 0x29, 0xad,  0xe6, 0x34
                    , 0xee, 0x84, 0x3f, 0xc4, 0x18, 0xd0, 0x07, 0x55, 0x54, 0x7d, 0xb2, 0xdd, 0xc2, 0xf7, 0x6a, 0x6a,
                    0xcb, 0x65, 0x00, 0xbd, 0x0c, 0x80, 0xc4, 0xc9, 0xb3, 0x83, 0x94, 0x89, 0x6e, 0xea, 0x3f, 0xdf, 0xd6
                    , 0x12, 0x02, 0xac, 0x74, 0xbc, 0x4b, 0x5e, 0x86, 0x5e, 0x10, 0x7c, 0x75, 0x87, 0x4a, 0x21, 0x52,
                    0xb5, 0xb6, 0xed, 0x66, 0xc9, 0x47, 0x76, 0x5d, 0x63, 0x60, 0xa2, 0xf0, 0x9b, 0xa0, 0x7c, 0xf1, 0x72
                    , 0x37, 0x3a, 0x98, 0x80, 0xa0, 0xc0, 0x1c, 0x72, 0x7b, 0x52, 0x6b, 0x3b, 0xe2, 0x9b, 0x59, 0x35,
                    0xf2, 0x56, 0x76, 0x6e, 0xc4, 0xc9, 0x7a, 0x21, 0xf8, 0xb3, 0xc0, 0x4b, 0x3f, 0x94, 0xf4, 0x63, 0x0f
                    , 0x91, 0x6d, 0xe9, 0x47, 0x68, 0x97, 0xb5, 0x0e, 0x24, 0x56, 0x0a, 0x1a, 0x0a, 0xaa, 0x85, 0x6a,
                    0xb0, 0x3a, 0x79, 0x98, 0x7e, 0xef, 0xd1, 0xc1, 0x29, 0x0f, 0xbf, 0x0a, 0x96, 0xd1, 0xe8, 0xe7, 0xbc
                    , 0xd4, 0xb8, 0x7f, 0xab, 0xcd, 0x37, 0x13, 0x78, 0x22, 0xa4, 0x3b, 0x8f, 0xfd, 0x09, 0x68, 0x85,
                    0xa9, 0x8d, 0x85, 0xcc, 0x2d, 0x3d, 0xc1, 0xe9, 0x05, 0x27, 0xc2, 0xd9, 0xd0, 0x73, 0x25, 0x70, 0x03
                    , 0x5d, 0x2d, 0x84, 0xaf, 0x9b, 0x3d, 0xd4, 0xc7, 0x70, 0x6f, 0x16, 0xac, 0xbc, 0x27, 0x2b, 0x7c,
                    0x74, 0x18, 0x6a, 0xf0, 0xc4, 0x54, 0x93, 0x36, 0x42, 0xf0, 0x28, 0x39, 0xfe, 0x57, 0xec, 0x65, 0x23
                    , 0x07, 0x1e, 0xca, 0xf5, 0x3e, 0x7b, 0x08, 0xb8, 0xcd, 0x0e, 0x19, 0xb6, 0xf5, 0x18, 0x93, 0x02,
                    0x03, 0x01, 0x00, 0x01, 0xa3, 0x81, 0xb0, 0x30, 0x81, 0xad, 0x30, 0x0b, 0x06, 0x03, 0x55, 0x1d, 0x0f
                    , 0x04, 0x04, 0x03, 0x02, 0x01, 0xc6, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff,
                    0x04, 0x05, 0x30, 0x03, 0x01, 0x01, 0xff, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04
                    , 0x14, 0xcb, 0x9d, 0x7e, 0x51, 0x7e, 0x08, 0x20, 0xc4, 0xf5, 0x70, 0x94, 0xa1, 0xce, 0x52, 0xc7,
                    0x05, 0x4d, 0x3f, 0x33, 0xf3, 0x30, 0x5c, 0x06, 0x03, 0x55, 0x1d, 0x1f, 0x04, 0x55, 0x30, 0x53, 0x30
                    , 0x51, 0xa0, 0x4f, 0xa0, 0x4d, 0x86, 0x4b, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x77, 0x77,
                    0x77, 0x2e, 0x77, 0x6d, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x65, 0x72, 0x74
                    , 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x2f, 0x57, 0x65, 0x62, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x25,
                    0x32, 0x30, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x25, 0x32, 0x30, 0x52, 0x6f, 0x6f, 0x74
                    , 0x25, 0x32, 0x30, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6c,
                    0x30, 0x10, 0x06, 0x09, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0x37, 0x15, 0x01, 0x04, 0x03, 0x02, 0x01
                    , 0x02, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x05, 0x05, 0x00,
                    0x03, 0x82, 0x01, 0x01, 0x00, 0x6a, 0x1b, 0x2b, 0xf9, 0x15, 0x5a, 0x55, 0xe0, 0xc2, 0xb4, 0x55, 0x85
                    , 0xcf, 0x16, 0xa5, 0x21, 0xb3, 0x25, 0x5c, 0x48, 0x3a, 0x8c, 0xfa, 0x1b, 0xb8, 0x53, 0x43, 0x80,
                    0xd1, 0xc2, 0x0a, 0x1c, 0xe5, 0xd1, 0x57, 0xa0, 0x5c, 0x6c, 0x3c, 0xec, 0x36, 0x2d, 0x7e, 0xe8, 0x75
                    , 0x40, 0xda, 0xfa, 0xfd, 0x3c, 0x87, 0x08, 0x55, 0x34, 0x65, 0x19, 0x77, 0x14, 0xf7, 0x92, 0x5c,
                    0x41, 0xed, 0xed, 0x8d, 0xb5, 0xd0, 0x34, 0xd3, 0x29, 0x29, 0xc8, 0x0b, 0xd1, 0x83, 0x16, 0xd2, 0x27
                    , 0xcc, 0x03, 0x6a, 0xae, 0xe7, 0x2e, 0xa7, 0x25, 0x32, 0x2e, 0xee, 0xb2, 0x82, 0x11, 0x25, 0x2d,
                    0xb0, 0xcc, 0xd0, 0x52, 0x77, 0x1c, 0x69, 0x79, 0x98, 0x9f, 0x40, 0xc2, 0x85, 0x8b, 0xaf, 0x3c, 0xe6
                    , 0xdb, 0xe6, 0xcb, 0x9f, 0x45, 0x59, 0x6c, 0x1c, 0xbf, 0x46, 0x73, 0xdd, 0x1e, 0x46, 0x24, 0x7c,
                    0x96, 0x87, 0xda, 0x0e, 0xa2, 0x0c, 0xf3, 0x6b, 0xc4, 0x4e, 0xc4, 0x04, 0x22, 0x3d, 0x4c, 0xd6, 0x27
                    , 0xd4, 0x80, 0x3e, 0x4b, 0xc5, 0x9b, 0xb0, 0x43, 0xc7, 0xdd, 0x11, 0x26, 0x7f, 0x18, 0x79, 0x31,
                    0x0a, 0x8b, 0x1a, 0xf5, 0x81, 0xbb, 0x59, 0x92, 0x93, 0x30, 0x48, 0x0f, 0x49, 0x7a, 0x4b, 0x99, 0xdf
                    , 0xb2, 0xdb, 0x83, 0x64, 0x94, 0xc8, 0xbd, 0x71, 0xbf, 0xb4, 0x74, 0x97, 0x1e, 0xf3, 0x83, 0xa0,
                    0x31, 0x47, 0xc5, 0x03, 0x16, 0x0e, 0xef, 0x59, 0x64, 0x73, 0x47, 0x49, 0xe4, 0x1e, 0xd3, 0x26, 0xca
                    , 0x92, 0x62, 0x6c, 0x27, 0x8f, 0x4c, 0x78, 0xc3, 0x7d, 0x80, 0xbf, 0x74, 0xe2, 0x10, 0x93, 0x90,
                    0x32, 0x08, 0x40, 0x25, 0x5b, 0x1d, 0x3c, 0x98, 0x84, 0xcd, 0x48, 0x87, 0x31, 0x50, 0xec, 0x01, 0xbc
                    , 0x97, 0x43, 0x4d, 0xe0, 0x64, 0x8c, 0x9e, 0xc4, 0x5a, 0x65, 0xe1, 0x00, 0xf2
                });

        private static readonly X509Certificate _rootAuthority2 = new X509Certificate(
            new byte[]
                {
                    0x30, 0x82, 0x02, 0xA9, 0x30, 0x82, 0x02, 0x12, 0x02, 0x09, 0x00, 0x92, 0x32, 0x2E, 0xFE, 0xC6, 0xCE
                    ,
                    0xAC, 0x37, 0x30, 0x0D, 0x06, 0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x05, 0x05, 0x00
                    , 0x30, 0x81, 0x98, 0x31, 0x0B, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x75, 0x61,
                    0x31, 0x17, 0x30, 0x15, 0x06, 0x03, 0x55, 0x04, 0x08, 0x13, 0x0E, 0x6F, 0x64, 0x65, 0x73, 0x73, 0x6B
                    , 0x61, 0x79, 0x61, 0x20, 0x6F, 0x62, 0x6C, 0x2E, 0x31, 0x0F, 0x30, 0x0D, 0x06, 0x03, 0x55, 0x04,
                    0x07, 0x13, 0x06, 0x6F, 0x64, 0x65, 0x73, 0x73, 0x61, 0x31, 0x11, 0x30, 0x0F, 0x06, 0x03, 0x55, 0x04
                    , 0x0A, 0x13, 0x08, 0x49, 0x6D, 0x65, 0x78, 0x42, 0x61, 0x6E, 0x6B, 0x31, 0x0D, 0x30, 0x0B, 0x06,
                    0x03, 0x55, 0x04, 0x0B, 0x13, 0x04, 0x69, 0x6D, 0x65, 0x78, 0x31, 0x17, 0x30, 0x15, 0x06, 0x03, 0x55
                    , 0x04, 0x03, 0x13, 0x0E, 0x31, 0x39, 0x32, 0x2E, 0x31, 0x30, 0x30, 0x2E, 0x31, 0x30, 0x32, 0x2E,
                    0x33, 0x39, 0x31, 0x24, 0x30, 0x22, 0x06, 0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x09, 0x01
                    , 0x16, 0x15, 0x6C, 0x65, 0x6F, 0x6E, 0x6F, 0x6E, 0x40, 0x69, 0x6D, 0x65, 0x78, 0x2E, 0x6F, 0x64,
                    0x65, 0x73, 0x73, 0x61, 0x2E, 0x75, 0x61, 0x30, 0x1E, 0x17, 0x0D, 0x30, 0x35, 0x30, 0x38, 0x30, 0x39
                    , 0x31, 0x33, 0x33, 0x34, 0x32, 0x32, 0x5A, 0x17, 0x0D, 0x31, 0x30, 0x30, 0x38, 0x30, 0x38, 0x31,
                    0x33, 0x33, 0x34, 0x32, 0x32, 0x5A, 0x30, 0x81, 0x98, 0x31, 0x0B, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04
                    , 0x06, 0x13, 0x02, 0x75, 0x61, 0x31, 0x17, 0x30, 0x15, 0x06, 0x03, 0x55, 0x04, 0x08, 0x13, 0x0E,
                    0x6F, 0x64, 0x65, 0x73, 0x73, 0x6B, 0x61, 0x79, 0x61, 0x20, 0x6F, 0x62, 0x6C, 0x2E, 0x31, 0x0F, 0x30
                    , 0x0D, 0x06, 0x03, 0x55, 0x04, 0x07, 0x13, 0x06, 0x6F, 0x64, 0x65, 0x73, 0x73, 0x61, 0x31, 0x11,
                    0x30, 0x0F, 0x06, 0x03, 0x55, 0x04, 0x0A, 0x13, 0x08, 0x49, 0x6D, 0x65, 0x78, 0x42, 0x61, 0x6E, 0x6B
                    , 0x31, 0x0D, 0x30, 0x0B, 0x06, 0x03, 0x55, 0x04, 0x0B, 0x13, 0x04, 0x69, 0x6D, 0x65, 0x78, 0x31,
                    0x17, 0x30, 0x15, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x0E, 0x31, 0x39, 0x32, 0x2E, 0x31, 0x30, 0x30
                    , 0x2E, 0x31, 0x30, 0x32, 0x2E, 0x33, 0x39, 0x31, 0x24, 0x30, 0x22, 0x06, 0x09, 0x2A, 0x86, 0x48,
                    0x86, 0xF7, 0x0D, 0x01, 0x09, 0x01, 0x16, 0x15, 0x6C, 0x65, 0x6F, 0x6E, 0x6F, 0x6E, 0x40, 0x69, 0x6D
                    , 0x65, 0x78, 0x2E, 0x6F, 0x64, 0x65, 0x73, 0x73, 0x61, 0x2E, 0x75, 0x61, 0x30, 0x81, 0x9F, 0x30,
                    0x0D, 0x06, 0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x81, 0x8D
                    , 0x00, 0x30, 0x81, 0x89, 0x02, 0x81, 0x81, 0x00, 0xD1, 0x5F, 0x4E, 0xC7, 0xE9, 0x98, 0x6B, 0x62,
                    0x89, 0x6D, 0xD9, 0xCB, 0xFE, 0x1C, 0x7A, 0x2C, 0x1B, 0x3A, 0x13, 0x39, 0x11, 0x55, 0xDE, 0x5D, 0xA5
                    , 0xAE, 0x1F, 0x5F, 0xAA, 0x63, 0xF7, 0x99, 0x84, 0x05, 0x1D, 0x50, 0x33, 0x2D, 0x48, 0x60, 0x63,
                    0xB9, 0x99, 0xE8, 0x48, 0x0A, 0x02, 0x35, 0x2E, 0x31, 0x60, 0xF1, 0x43, 0x35, 0x40, 0xC4, 0x13, 0xC7
                    , 0x56, 0x36, 0x94, 0x55, 0xA9, 0x92, 0x58, 0x0F, 0xE1, 0xA7, 0x74, 0xE0, 0x1D, 0x60, 0x5F, 0x20,
                    0x0C, 0xF7, 0x4E, 0xAA, 0xBC, 0x6B, 0x37, 0x7F, 0x68, 0xF0, 0xDA, 0xAD, 0x0E, 0x29, 0xAF, 0xB5, 0x7F
                    , 0x89, 0xE9, 0xE9, 0x6B, 0xF9, 0x26, 0xA5, 0x84, 0xCB, 0x53, 0x02, 0x2C, 0x94, 0xB8, 0x08, 0xE2,
                    0x17, 0x3F, 0x3D, 0x54, 0xB6, 0x12, 0x73, 0x67, 0x5D, 0x82, 0x38, 0x6C, 0x8D, 0xFF, 0x9E, 0xF6, 0x5C
                    , 0xC3, 0x07, 0xC3, 0x6D, 0x02, 0x03, 0x01, 0x00, 0x01, 0x30, 0x0D, 0x06, 0x09, 0x2A, 0x86, 0x48,
                    0x86, 0xF7, 0x0D, 0x01, 0x01, 0x05, 0x05, 0x00, 0x03, 0x81, 0x81, 0x00, 0x2A, 0xAB, 0x86, 0x64, 0xA1
                    , 0x73, 0x15, 0x3D, 0x70, 0x65, 0x8F, 0x79, 0xB2, 0xDB, 0x92, 0xB3, 0x72, 0x07, 0xDD, 0xF7, 0x3F,
                    0xF7, 0x74, 0xBB, 0x51, 0x4A, 0xE4, 0x6F, 0x76, 0x82, 0x3C, 0x19, 0x30, 0xF7, 0xB4, 0x7C, 0xCD, 0xCA
                    , 0x20, 0xEA, 0x95, 0xAA, 0xC7, 0x09, 0xD1, 0x1E, 0x1F, 0x6E, 0x65, 0x3D, 0x1A, 0x1F, 0xC8, 0x66,
                    0x8F, 0x50, 0x39, 0x3F, 0x92, 0xA2, 0x3F, 0xC2, 0x4F, 0xEE, 0x9C, 0x51, 0xDE, 0xEE, 0x9C, 0xC6, 0xD0
                    , 0xDB, 0xEF, 0xC1, 0xD5, 0x31, 0xC7, 0x27, 0xB3, 0xD5, 0x85, 0xE6, 0x74, 0x00, 0x6A, 0x0F, 0xFA,
                    0x90, 0x38, 0x00, 0x5D, 0xD8, 0x31, 0x14, 0xCF, 0xA1, 0x6B, 0xE9, 0x88, 0xA5, 0x0D, 0x70, 0x39, 0xBC
                    , 0x9F, 0xE4, 0x48, 0xB7, 0xFA, 0x67, 0x43, 0x64, 0xD6, 0x23, 0xAE, 0xC6, 0x13, 0x6A, 0x58, 0x71,
                    0x32, 0xF1, 0x88, 0x32, 0xE4, 0x09, 0x4D, 0xA7
                }
            );
        
        #endregion

        /// <summary>
        /// Remotes the certificate validation callback.
        /// </summary>
        /// <param name="sender">The sender.</param>
        /// <param name="certificate">The certificate.</param>
        /// <param name="chain">The chain.</param>
        /// <param name="sslPolicyErrors">The SSL policy errors.</param>
        /// <returns></returns>
        public static bool RemoteCertificateValidationCallback(object sender, X509Certificate certificate, X509Chain chain,
                                                         SslPolicyErrors sslPolicyErrors)
        {
            if (SslPolicyErrors.None == sslPolicyErrors)
                return true;

            if (SslPolicyErrors.None == sslPolicyErrors ||
                SslPolicyErrors.RemoteCertificateChainErrors == sslPolicyErrors ||
                (SslPolicyErrors.RemoteCertificateChainErrors | SslPolicyErrors.RemoteCertificateNameMismatch) ==
                sslPolicyErrors)
            {
                if (null != chain && chain.ChainStatus.Length == 1 &&
                    chain.ChainStatus[0].Status == X509ChainStatusFlags.UntrustedRoot)
                {
                    X509ChainElement rootElement = chain.ChainElements[chain.ChainElements.Count - 1];

                    if (rootElement.Certificate.Equals(_rootAuthority1) || rootElement.Certificate.Equals(_rootAuthority2))
                        return true;
                }
            }

            return false;
        }
    }
}
