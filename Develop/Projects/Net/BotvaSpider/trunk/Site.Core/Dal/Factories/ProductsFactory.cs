

/******************************************
* Auto-generated by CodeRocket
* 08.11.2009 9:38:22
******************************************/
using System.Collections.Generic;
using System.Data;
using Site.Core;
using Savchin.Data.Common;
using Site.Dal.Entities;

namespace Site.Dal.Factories
{

    /// <summary>
    /// Product Factory class
    ///
    //</summary>
    public partial class ProductFactory : FactoryEntityBase<ProductValue>
    {

        int ordinalCreationDate;
        int ordinalName;
        int ordinalPrivateKey;
        int ordinalProductID;
        int ordinalPublicKey;


        protected override void InitOrdinals(IDataReader reader)
        {
            ordinalCreationDate = reader.GetOrdinal("CreationDate");
            ordinalName = reader.GetOrdinal("Name");
            ordinalPrivateKey = reader.GetOrdinal("PrivateKey");
            ordinalProductID = reader.GetOrdinal("ProductID");
            ordinalPublicKey = reader.GetOrdinal("PublicKey");
        }
        /// <summary>
        /// Maps the IDataReader values to a Product object
        //</summary>
        /// <param name="reader">The IDataReader to map</param>
        protected override ProductValue MapObject(IDataReader reader)
        {
            ProductValue result = new ProductValue();
            result.CreationDate = reader.GetDateTime(ordinalCreationDate);
            result.Name = reader.GetString(ordinalName);
            result.PrivateKey = (byte[])reader.GetValue(ordinalPrivateKey);
            result.ProductID = reader.GetInt32(ordinalProductID);
            result.PublicKey = (byte[])reader.GetValue(ordinalPublicKey);
            return result;
        }

        /// <summary>
        /// Creates the insert command.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns></returns>
        public void Insert(ProductValue value)
        {
            IDbCommand command = database.CreateSPCommand("Product_Insert");
            command.AddInputParameter( "@CreationDate", DbType.DateTime, value.CreationDate);
            command.AddInputParameter( "@Name", DbType.String, value.Name);
            command.AddInputParameter( "@PrivateKey", DbType.Binary, value.PrivateKey);
            IDbDataParameter ProductIDParameter = command.AddParameter( "@ProductID", DbType.Int32, null, ParameterDirection.Output);
            command.AddInputParameter( "@PublicKey", DbType.Binary, value.PublicKey);
            database.ExecuteNonQuery(command);

            value.ProductID = (System.Int32)ProductIDParameter.Value;
        }

        /// <summary>
        /// Updates the specified Product.
        /// </summary>
        /// <param name="value">The Product value.</param>
        public void Update(ProductValue value)
        {
            IDbCommand command = database.CreateSPCommand("Product_Update");
            command.AddInputParameter( "@CreationDate", DbType.DateTime, value.CreationDate);
            command.AddInputParameter( "@Name", DbType.String, value.Name);
            command.AddInputParameter( "@PrivateKey", DbType.Binary, value.PrivateKey);
            command.AddInputParameter( "@ProductID", DbType.Int32, value.ProductID);
            command.AddInputParameter( "@PublicKey", DbType.Binary, value.PublicKey);
            database.ExecuteNonQuery(command);

        }
        /// <summary>
        /// Gets Product by ID.
        /// </summary>
        /// <param name="ProductID">The ProductID.</param>
        /// <returns></returns>
        public ProductValue SelectByID(System.Int32 ProductID)
        {
            IDbCommand command = database.CreateSPCommand("Product_GetByID");
            command.AddInputParameter( "@ProductID", DbType.Int32, ProductID);
            return SelectSingle(command);
        }

        /// <summary>
        /// Deletes the specified Product.
        /// </summary>
        /// <param name="ProductID">The ProductID.</param>
        public void Delete(System.Int32 ProductID)
        {
            IDbCommand command = database.CreateSPCommand("Product_Delete");
            command.AddInputParameter( "@ProductID", DbType.Int32, ProductID);
            database.ExecuteNonQuery(command);

        }

        /// <summary>
        /// Deletes the specified Product.
        /// </summary>
        /// <param name="value">The value.</param>
        public void Delete(ProductValue value)
        {
            IDbCommand command = database.CreateSPCommand("Product_Delete");
            command.AddInputParameter( "@ProductID", DbType.Int32, value.ProductID);
            database.ExecuteNonQuery(command);

        }
        /// <summary>
        /// Selects all Product values.
        /// </summary>
        /// <returns>List of all Product</returns>
        public IList<ProductValue> SelectAll()
        {
            return Select(database.CreateSPCommand("Product_GetAll"));
        }

    }
}