//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Savchin.Data.CSV.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionMessage {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessage() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Savchin.Data.CSV.Resources.ExceptionMessage", typeof(ExceptionMessage).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Buffer size must be 1 or more..
        /// </summary>
        internal static string BufferSizeTooSmall {
            get {
                return ResourceManager.GetString("BufferSizeTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot move to a previous record in forward-only mode..
        /// </summary>
        internal static string CannotMovePreviousRecordInForwardOnly {
            get {
                return ResourceManager.GetString("CannotMovePreviousRecordInForwardOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot read record at index &apos;{0}&apos;..
        /// </summary>
        internal static string CannotReadRecordAtIndex {
            get {
                return ResourceManager.GetString("CannotReadRecordAtIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enumeration has either not started or has already finished..
        /// </summary>
        internal static string EnumerationFinishedOrNotStarted {
            get {
                return ResourceManager.GetString("EnumerationFinishedOrNotStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Collection was modified; enumeration operation may not execute..
        /// </summary>
        internal static string EnumerationVersionCheckFailed {
            get {
                return ResourceManager.GetString("EnumerationVersionCheckFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &apos;{0}&apos; field header not found..
        /// </summary>
        internal static string FieldHeaderNotFound {
            get {
                return ResourceManager.GetString("FieldHeaderNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Field index must be included in [0, FieldCount[. Specified field index was : &apos;{0}&apos;..
        /// </summary>
        internal static string FieldIndexOutOfRange {
            get {
                return ResourceManager.GetString("FieldIndexOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The CSV appears to be corrupt near record &apos;{0}&apos; field &apos;{1} at position &apos;{2}&apos;. Current raw data : &apos;{3}&apos;..
        /// </summary>
        internal static string MalformedCsvException {
            get {
                return ResourceManager.GetString("MalformedCsvException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &apos;{0}&apos; is not a supported missing field action..
        /// </summary>
        internal static string MissingFieldActionNotSupported {
            get {
                return ResourceManager.GetString("MissingFieldActionNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No current record..
        /// </summary>
        internal static string NoCurrentRecord {
            get {
                return ResourceManager.GetString("NoCurrentRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The CSV does not have headers (CsvReader.HasHeaders property is false)..
        /// </summary>
        internal static string NoHeaders {
            get {
                return ResourceManager.GetString("NoHeaders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The number of fields in the record is greater than the available space from index to the end of the destination array..
        /// </summary>
        internal static string NotEnoughSpaceInArray {
            get {
                return ResourceManager.GetString("NotEnoughSpaceInArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &apos;{0}&apos; is not a valid ParseErrorAction while inside a ParseError event..
        /// </summary>
        internal static string ParseErrorActionInvalidInsideParseErrorEvent {
            get {
                return ResourceManager.GetString("ParseErrorActionInvalidInsideParseErrorEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &apos;{0}&apos; is not a supported ParseErrorAction..
        /// </summary>
        internal static string ParseErrorActionNotSupported {
            get {
                return ResourceManager.GetString("ParseErrorActionNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This operation is invalid when the reader is closed..
        /// </summary>
        internal static string ReaderClosed {
            get {
                return ResourceManager.GetString("ReaderClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Record index must be 0 or more..
        /// </summary>
        internal static string RecordIndexLessThanZero {
            get {
                return ResourceManager.GetString("RecordIndexLessThanZero", resourceCulture);
            }
        }
    }
}
